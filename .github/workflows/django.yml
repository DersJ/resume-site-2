name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  

jobs:
  build:
    runs-on: ubuntu-latest
    environment: resume-site-2
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SITE_ID: ${{ secrets.SITE_ID }}
      DEBUG: True
      USE_S3: True
      DISABLE_COLLECTSTATIC: 1

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Se  tup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev
      - name: Run Tests
        run: |
          pipenv run ./manage.py test
